<?xml version="1.0"?>
<ruleset name="Amplify WordPress Coding Standards">
  <!-- These aren't official, but a WIP -->

  <description>Apply WordPress Coding Standards</description>

  <!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
  <arg name="cache" value=".phpcs-cache"/>

  <!-- Show colors in console -->
  <arg name="colors"/>

  <!-- Show sniff codes in all reports -->
  <arg value="s"/>

  <!-- Don't show warnings -->
  <arg value="n"/>

  <!-- Show progress of the run -->
  <arg value="p"/>

  <!-- Scan these files -->
  <file>.</file>

  <!-- Directories and third party library exclusions. -->
  <exclude-pattern>/vendor/*</exclude-pattern>
  <exclude-pattern>/node_modules/*</exclude-pattern>
  <exclude-pattern>/dist/*</exclude-pattern>
  <exclude-pattern>/build/*</exclude-pattern>
  <exclude-pattern>/dist-product/*</exclude-pattern>

  <!-- Use the WordPress Ruleset -->
  <rule ref="WordPress">
    <include-pattern>*\.php$</include-pattern>
    <exclude name="Generic.WhiteSpace.DisallowSpaceIndent" />
    <exclude name="Generic.PHP.DisallowShortOpenTag" />
    <exclude name="Generic.Arrays.DisallowShortArraySyntax" />
  </rule>

  <rule ref="Squiz.Arrays.ArrayDeclaration">
    <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNoNewline" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed" />
    <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed" />
  </rule>

  <rule ref="Squiz.Commenting.FileComment">
    <exclude-pattern>*/inc/*</exclude-pattern>
  </rule>

  <!--
    Verify that the text_domain is set to the desired text-domain.
    Multiple valid text domains can be provided as a comma-delimited list.
  -->
  <rule ref="WordPress.WP.I18n">
    <properties>
      <property name="text_domain" type="array" value="crypto-blocks"/>
    </properties>
  </rule>

  <!--
    Allow for theme specific exceptions to the file name rules based
    on the theme hierarchy.
  -->
  <rule ref="WordPress.Files.FileName">
    <properties>
      <property name="is_theme" value="false"/>
    </properties>
  </rule>

  <!-- Assignments in while conditions are a valid method of looping over iterables. -->
  <rule ref="WordPress.CodeAnalysis.AssignmentInCondition.FoundInWhileCondition">
    <exclude-pattern>*</exclude-pattern>
  </rule>

  <!--
    Exclude checking of line endings when reporting errors, but fix them
    when running phpcbf.
  -->
  <rule ref="Generic.Files.LineEndings">
    <exclude phpcs-only="true" name="Generic.Files.LineEndings"/>
  </rule>

  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <properties>
      <property name="indent" value="4"/>
      <property name="tabIndent" value="false"/>
    </properties>
  </rule>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent" />

  <rule ref="Generic.PHP.ForbiddenFunctions">
    <properties>
      <property name="forbiddenFunctions" type="array">
        <element key="ray" value="null"/>
        <element key="var_dump" value="null"/>
        <element key="print_r" value="null"/>
      </property>
    </properties>
  </rule>

   <!-- Exclude specific file name rules -->
   <rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
      <exclude-pattern>*/inc/*</exclude-pattern>
   </rule>
   <rule ref="WordPress.Files.FileName.InvalidClassFileName">
         <exclude-pattern>*/inc/*</exclude-pattern>
   </rule>
   <rule ref="WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase">
         <exclude-pattern>*/inc/*</exclude-pattern>
    </rule>
    <rule ref="WordPress.PHP.YodaConditions.NotYoda">
         <exclude-pattern>*/inc/*</exclude-pattern>
    </rule>
    <rule ref="Generic.Commenting.DocComment.MissingShort">
         <exclude-pattern>*/inc/*</exclude-pattern>
    </rule>
</ruleset>