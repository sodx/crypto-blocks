name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-scripts --no-progress --no-interaction --no-dev

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.20.0'

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install Yarn dependencies
        run: yarn install

      - name: Create release package
        run: |
          zip -r crypto-blocks.zip . \
            -x ".git/*" ".github/*" "node_modules/*" \
            ".husky/*" "src/*" ".env" ".eslintrc.js" ".gitignore" ".nvmrc" \
            ".phpcs-cache" ".prettierrc.js" "docker-compose.yml" "Dockerfile" \
            "entrypoint.sh" "Makefile" "phpcs.xml.dist" "prepare.js" "README.md" \
            "webpack.config.js" "yarn.lock" "composer.json" "composer.lock" \

      - name: Upload release asset
        uses: actions/upload-artifact@v2
        with:
          name: crypto-blocks.zip
          path: crypto-blocks.zip
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download release asset
        uses: actions/download-artifact@v2
        with:
          name: crypto-blocks.zip

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Automated release from GitHub Actions.
          draft: false
          prerelease: false
          files: crypto-blocks.zip